#!/usr/bin/env ruby

# Compare the equality of 2 hdl module classes.
# The 2 classes are in separate files.

require 'pp'

if ARGV.size != 2
  puts "error: you must specify 2 ruby hdl modules to compare."
  exit 1
end

$LOAD_PATH.unshift File.expand_path("../../lib")
$LOAD_PATH.unshift File.expand_path("../lib")

require_relative "../lib/verilog_gen"

def create_hdl_instance(ns, filename)
  content = File.open(filename).read 
  eval """
  module #{ns}
    include VerilogGen
    # Hook to detect a subclass
    class HdlModule
      @@instances = []
      def self.inherited(new_subclass)
        @@instances << new_subclass.new('hello')
      end
      def self.get
        @@instances
      end
    end
    #{content}
  end
  """
  return ns::HdlModule.get
end

module Lhs; end
module Rhs; end

lhs = create_hdl_instance(Lhs, ARGV[0])
rhs = create_hdl_instance(Rhs, ARGV[1])

pp lhs
pp rhs

if lhs == rhs 
  puts "Hurrah they are equal"
  exit 0
else
  puts "They are not equal"
  exit 1
end
